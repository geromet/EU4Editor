// <auto-generated />
using System;
using DataAccessLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLibrary.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0-preview.4.22229.2");

            modelBuilder.Entity("DataAccessLibrary.Models.Idea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdeaGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdeaGroupId");

                    b.ToTable("Ideas");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.IdeaGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IdeaGroups");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Modifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdeaGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdeaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Power")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdeaGroupId");

                    b.HasIndex("IdeaId");

                    b.ToTable("Modifiers");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HreReligion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReligionGroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReligionGroupId");

                    b.ToTable("Religions");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.ReligionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanFormPersonalUnions")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CenterOfReligion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("DefenderOfFaith")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ReligionGroups");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Idea", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.IdeaGroup", null)
                        .WithMany("Ideas")
                        .HasForeignKey("IdeaGroupId");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Modifier", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.IdeaGroup", null)
                        .WithMany("Bonus")
                        .HasForeignKey("IdeaGroupId");

                    b.HasOne("DataAccessLibrary.Models.Idea", null)
                        .WithMany("Modifiers")
                        .HasForeignKey("IdeaId");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Religion", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.ReligionGroup", "ReligionGroup")
                        .WithMany()
                        .HasForeignKey("ReligionGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReligionGroup");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Idea", b =>
                {
                    b.Navigation("Modifiers");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.IdeaGroup", b =>
                {
                    b.Navigation("Bonus");

                    b.Navigation("Ideas");
                });
#pragma warning restore 612, 618
        }
    }
}
